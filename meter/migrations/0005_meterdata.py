# Generated by Django 5.1.7 on 2025-04-24 20:34

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('meter', '0004_alter_meterassignment_engineer'),
    ]

    operations = [
        migrations.CreateModel(
            name='MeterData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('engine_hours', models.FloatField()),
                ('frequency_hz', models.FloatField(help_text='Frequency of the generator in hertz')),
                ('power_percentage', models.IntegerField()),
                ('phase_a_voltage_v', models.FloatField()),
                ('phase_a_current_a', models.FloatField()),
                ('phase_b_voltage_v', models.FloatField()),
                ('phase_b_current_a', models.FloatField()),
                ('phase_c_voltage_v', models.FloatField()),
                ('phase_c_current_a', models.FloatField()),
                ('coolant_temp_c', models.IntegerField(help_text='Coolant temperature in Celsius')),
                ('oil_pressure_kpa', models.IntegerField(help_text='Oil pressure in kilopascals')),
                ('battery_voltage_v', models.FloatField(help_text='Battery voltage in volts')),
                ('fuel_level_percent', models.IntegerField(help_text='Fuel level in percentage')),
                ('rpm', models.IntegerField(help_text='Engine RPM')),
                ('oil_temp_c', models.IntegerField(help_text='Oil temperature in Celsius')),
                ('boost_pressure_kpa', models.IntegerField(help_text='Boost pressure in kilopascals')),
                ('intake_air_temp_c', models.IntegerField(help_text='Intake air temperature in Celsius')),
                ('fuel_rate_lph', models.FloatField(help_text='Fuel rate in liters per hour')),
                ('instantaneous_power_kw', models.FloatField(help_text='Instantaneous power in kilowatts')),
                ('alarm_emergency_stop', models.BooleanField(default=False)),
                ('alarm_low_oil_pressure', models.BooleanField(default=False)),
                ('alarm_high_coolant_temp', models.BooleanField(default=False)),
                ('alarm_low_coolant_level', models.BooleanField(default=False)),
                ('alarm_crank_failure', models.BooleanField(default=False)),
                ('meter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_points', to='meter.meter')),
            ],
            options={
                'verbose_name': 'Meter Data',
                'verbose_name_plural': 'Meter Data',
                'ordering': ['-timestamp'],
            },
        ),
    ]
